<flexbox>
  <canvas :width="300" :height="300" :origin="[150, 50]">
    <let :d="15" />
    <let :v="0" />
    <let :O="[2*d, 2*d]" />
    <let :P="[O[0] + 2*d * Math.cos(v * Math.PI / 180), O[1] + 2*d * Math.sin(v * Math.PI / 180)]" />
    <let :A="[O[0] - 2*d, O[1]]" />
    <let :B="[O[0] + 2*d, O[1]]" />
    <let :angleA="Math.atan2(A[1] - P[1], A[0] - P[0]) * 180 / Math.PI" />
    <let :angleB="Math.atan2(B[1] - P[1], B[0] - P[0]) * 180 / Math.PI" />
    <let :sideA="Math.sqrt((A[0] - P[0])**2 + (A[1] - P[1])**2)" />
    <let :sideB="Math.sqrt((B[0] - P[0])**2 + (B[1] - P[1])**2)" />
    <let :from="angleA < angleB ? angleA : angleB" />
    <let :to="angleA < angleB ? angleB : angleA" />
    <let :startSide="angleA < angleB ? sideA : sideB" />
    <let :endSide="angleA < angleB ? sideB : sideA" />
    <line :from="A" :to="B" type="solid" value="O" />
    <angle
      :from="from"
      :to="to"
      :start-side="startSide"
      :end-side="endSide"
      :x="P[0]"
      :y="P[1]"
    >
      <start-point as="A" value="A" />
      <end-point as="B" value="B" />
      <origin as="P" value="P" />
      <arc type="solid" value="90 \degree" />
    </angle>
    <line :from="O" :to="P" type="dashed" />
    <circle $="v(1080),10000" :x="O[0]" :y="O[1]" :radius="2 * d" />
  </canvas>
</flexbox>